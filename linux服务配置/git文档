参考文档
https://www.linuxidc.com/Linux/2018-05/152611.htm   
https://www.linuxidc.com/Linux/2016-09/135527.htm

  
   add        添加文件内容至索引
   bisect     通过二分查找定位引入 bug 的变更
   branch     列出、创建或删除分支
   checkout   检出一个分支或路径到工作区
   clone      克隆一个仓库到一个新目录
   commit     记录变更到仓库
   diff       显示提交之间、提交和工作区之间等的差异
   fetch      从另外一个仓库下载对象和引用
   grep       输出和模式匹配的行
   init       创建一个空的 Git 仓库或重新初始化一个已存在的仓库
   log        显示提交日志
   merge      合并两个或更多开发历史
   mv         移动或重命名一个文件、目录或符号链接
   pull       获取并整合另外的仓库或一个本地分支
   push       更新远程引用和相关的对象
   rebase     本地提交转移至更新后的上游分支中
   reset      重置当前 HEAD 到指定状态
   rm         从工作区和索引中删除文件
   show       显示各种类型的对象
   status     显示工作区状态
   tag        创建、列出、删除或校验一个 GPG 签名的标签对象




安装git   sudo apt-get install git

安装完成后进行git配置
git config --global user.name "ezreal"
git config --global user.eamil "921421398@qq.com"
查看git配置  git config --list


创建验证用的公钥在  /home/ezreal/.ssh/id_rsa 文件下
创建公钥命令  ssh-keygen -C '921421398@qq.com' -t rsa     选择yes  保持三次回车就ok

密钥为 10:1f:a6:7f:72:d1:aa:b6:1b:3d:42:f5:20:a8:42:ae 921421398@qq.com

复制SSH Key到GITHUB    
cd ~/.ssh     gedit id_rsa.pub   全选复制
登录github-> Settings-> SSH and GPG Keys-> New SSH key添加 已复制的密钥保存

测试是否连接成功  ssh -T git@github.com



创建一个本地仓库   mkdir taozhen  
git init   初始化空的 Git 仓库于 /home/ezreal/taozhen/.git/
ls -a 查看本地仓库下是否有 .git文件
git -rf .git 	删除版本库


创建一个readme.txt文件    echo "This is a simple practise" > readme.txt
git status  查看状态   git log  查看日志
git add readme.txt  该文件加入缓冲区  再用git status查看文件是否绿色（提交成功）
git commit -m "First Commit"  代码提交到本地仓库，-m 后面是提交信息


使用git.commit命令时,这个Please tell me who yoy are 怎么解决？
切到 cd /home/ezreal/taozhen/.git/       vim config  添加ame和email信息
[user]
ame = ezreal
email = 921421398@qq.com


git branch  查看当前分支  只有一个master
创建一个名为apptest的分支，再用git branch查看一下
git checkout -b apptest     git checkout -b webtest
删除分支  git branch -D apptest
切换分支  git checkout master     git checkout apptest
回到某一历史版本 git checkout commitId     切回主分支git checkout master



1.下载新代码：git pull
2.从master出捡出一个新的分支：git checkout -b feature。feature是分支名称，你可以随意取名，但请用英文。
3.在feature分支上随意修改，改完后你可以提交你的修改：git commit -m "some message" 
4.此时要同步代码，请先切回主分支：git checkout master，然后更新git pull
5.删除自己建立的分支，使用git branch -D apptest，执行此命令后分支被强制删除，无法恢复


克隆代码到本地仓库
git clone https://github.com/ezrealtao/taozhen.git
克隆代码到本地指定目录
git clone https://github.com/ezrealtao/taozhen.git ~/下载/taozhen


代码提交远程仓库github  （需要终端里填写github的帐号密码）
remote分支建立连接 git remote add origin https://github.com/ezrealtao/taozhen.git
拉取并合并分支（pull）  git pull origin master
拉取不合并分支（fetch） git fetch origin master
推送分支 git push origin master
谨慎使用，强行推送，会覆盖远程仓库的代码，不建议使用  git push -f  


报错--当前分支的最新提交落后于其对应的远程分支，所以我们先从远程库fetch到更新再和本地库合并，之后就可以git push操作了。
git remote add origin https://github.com/ezrealtao/taozhen.git  
git fetch origin master
git merge origin/master


撤销未提交的更改
我们想撤销未提交的更改时可以用checkout命令，但这种方式仅适用于未add的代码，如果代码已经add过了，则需要先用reset命令取消添加，然后再用checkout来撤销修改的内容
git reset 文件名     git checkout 文件名


git版本控制   git branch version1.0
当需要将分支代码合并到主分支   git merge master
远程仓库的修改同步到本地       git fetch origin master   git pull origin master
查看远程修改了哪些文件         git diff
查看远程路径                  git remote -v


git标签（v1.0）
git tag -a v1.0  打标签
git tag          查看当前标签
指定标签信息命令：   git tag -a v1.0 -m "注释"
PGP签名称签命令：    git tag -s v1.0 -m "注释"     提示私钥不可用，无法为数据签名





